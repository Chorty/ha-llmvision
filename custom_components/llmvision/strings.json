{
    "config": {
        "step": {
            "user": {
                "title": "LLM Vision Setup",
                "description": "Select what you want to set up"
            },
            "localai": {
                "title": "Connect to your LocalAI server",
                "description": "Provide the IP address and port of your LocalAI server.",
                "data": {
                    "ip_address": "IP address",
                    "port": "Port",
                    "https": "HTTPS",
                    "default_model": "Default model",
                    "temperature": "Temperature",
                    "top_p": "Top P"
                }
            },
            "ollama": {
                "title": "Configure Ollama",
                "description": "Provide the IP address and port of your Ollama server.",
                "sections": {
                    "connection_section": {
                        "name": "Connection",
                        "description": "Manage server connection",
                        "data": {
                            "ip_address": "IP address",
                            "port": "Port",
                            "https": "HTTPS"
                        }
                    },
                    "model_section": {
                        "name": "Model",
                        "description": "Set default model parameters",
                        "data": {
                            "default_model": "Default model",
                            "temperature": "Temperature",
                            "top_p": "Top P"
                        }
                    }
                }
            },
            "openai": {
                "title": "Configure OpenAI",
                "description": "Provide a valid OpenAI API key.",
                "sections": {
                    "connection_section": {
                        "name": "Connection",
                        "description": "Manage OpenAI authentication",
                        "data": {
                            "api_key": "API key"
                        }
                    },
                    "model_section": {
                        "name": "Model",
                        "description": "Set default model parameters",
                        "data": {
                            "default_model": "Default model",
                            "temperature": "Temperature",
                            "top_p": "Top P"
                        }
                    }
                }
            },
            "azure": {
                "title": "Configure Azure",
                "description": "Provide a valid Azure API key, base URL, deployment and API version.\nThe Base URL must be in the format `https://domain.openai.azure.com/` including the trailing slash.",
                "sections": {
                    "connection_section": {
                        "name": "Connection",
                        "description": "Manage Azure authentication",
                        "data": {
                            "api_key": "API key",
                            "azure_base_url": "Base URL",
                            "azure_deployment": "Deployment",
                            "azure_version": "API Version"
                        }
                    },
                    "model_section": {
                        "name": "Model",
                        "description": "Set default model parameters",
                        "data": {
                            "default_model": "Default model",
                            "temperature": "Temperature",
                            "top_p": "Top P"
                        }
                    }
                }
            },
            "anthropic": {
                "title": "Configure Anthropic Claude",
                "description": "Provide a valid Anthropic API key.",
                "sections": {
                    "connection_section": {
                        "name": "Connection",
                        "description": "Manage Anthropic authentication",
                        "data": {
                            "api_key": "API key"
                        }
                    },
                    "model_section": {
                        "name": "Model",
                        "description": "Set default model parameters",
                        "data": {
                            "default_model": "Default model",
                            "temperature": "Temperature",
                            "top_p": "Top P"
                        }
                    }
                }
            },
            "google": {
                "title": "Configure Google Gemini",
                "description": "Provide a valid Google Gemini API key.",
                "sections": {
                    "connection_section": {
                        "name": "Connection",
                        "description": "Manage Google authentication",
                        "data": {
                            "api_key": "API key"
                        }
                    },
                    "model_section": {
                        "name": "Model",
                        "description": "Set default model parameters",
                        "data": {
                            "default_model": "Default model",
                            "temperature": "Temperature",
                            "top_p": "Top P"
                        }
                    }
                }
            },
            "groq": {
                "title": "Configure Groq",
                "description": "Provide a valid Groq API key.",
                "sections": {
                    "connection_section": {
                        "name": "Connection",
                        "description": "Manage Groq authentication",
                        "data": {
                            "api_key": "API key"
                        }
                    },
                    "model_section": {
                        "name": "Model",
                        "description": "Set default model parameters",
                        "data": {
                            "default_model": "Default model",
                            "temperature": "Temperature",
                            "top_p": "Top P"
                        }
                    }
                }
            },
            "custom_openai": {
                "title": "Configure Custom OpenAI provider",
                "description": "**Important**: Only works if the API is compatible with OpenAI's API. If the API doesn't require an API key, enter a dummy value. The endpoint must have the following format: `http(s)://baseURL(:port)/some/endpoint`",
                "sections": {
                    "connection_section": {
                        "name": "Connection",
                        "description": "Manage Custom OpenAI authentication",
                        "data": {
                            "custom_openai_endpoint": "Custom Endpoint",
                            "api_key": "API key"
                        }
                    },
                    "model_section": {
                        "name": "Model",
                        "description": "Set default model parameters",
                        "data": {
                            "default_model": "Default model",
                            "temperature": "Temperature",
                            "top_p": "Top P"
                        }
                    }
                }
            },
            "aws_bedrock": {
                "title": "Configure AWS Bedrock provider",
                "description": "**Important**: This currently only supports the following models: Nova, Anthropic Claude",
                "sections": {
                    "connection_section": {
                        "name": "Connection",
                        "description": "Manage AWS authentication",
                        "data": {
                            "aws_access_key_id": "Access Key",
                            "aws_secret_access_key": "Secret Key",
                            "aws_region_name": "Region string"
                        }
                    },
                    "model_section": {
                        "name": "Model",
                        "description": "Set default model parameters",
                        "data": {
                            "default_model": "Default model",
                            "temperature": "Temperature",
                            "top_p": "Top P"
                        }
                    }
                }
            },
            "openwebui": {
                "title": "Configure Open WebUI provider",
                "description": "Provide API key (JWT token), IP Address, Port, HTTP(S) and default model.",
                "sections": {
                    "connection_section": {
                        "name": "Connection",
                        "description": "Manage Open WebUI authentication",
                        "data": {
                            "api_key": "API Key (JWT token)",
                            "ip_address": "IP Address",
                            "port": "Port",
                            "https": "Use HTTPS"
                        }
                    },
                    "model_section": {
                        "name": "Model",
                        "description": "Set default model parameters",
                        "data": {
                            "default_model": "Default model",
                            "temperature": "Temperature",
                            "top_p": "Top P"
                        }
                    }
                }
            },
            "timeline": {
                "title": "Timeline",
                "description": "Set how many days events will be remembered for. Events will automatically be deleted after this time. Events are stored locally and can be deleted manually in the calendar view. (0 disables auto delete)",
                "data": {
                    "retention_time": "Auto delete events after (days)"
                }
            },
            "memory": {
                "title": "Memory",
                "description": "Content in memory syncs across providers and is used to provide additional context to the model.\nNote: If `use_memory` is enabled, all images in memory are sent to the provider with every call. Having lots of images in memory can increase processing time and increase cost!   \n\n **Image file paths**: Provide the path to the image file. \n **Image descriptions**: Provide a description of the image (e.g.: 'This is Cookie, my dog'). \n Images and descriptions must be in the same order, and there must be as many descriptions as images. \n\n **System Prompt**: Use the system prompt to change how the model behaves and responds. \n **Title Prompt**: The instruction given to the model to generate a title.",
                "data": {
                    "memory_paths": "Image file path",
                    "memory_strings": "Image description",
                    "system_prompt": "System prompt",
                    "title_prompt": "Title prompt"
                }
            }
        },
        "error": {
            "handshake_failed": "Could not connect to the server. Check you API key or IP and port",
            "empty_api_key": "Invalid API key",
            "invalid_provider": "Invalid provider selected",
            "memory_not_supported": "This provider does not support memory",
            "invalid_image_path": "One or more image paths are invalid",
            "mismatched_lengths": "The number of image paths and descriptions must match"
        },
        "abort": {
            "unknown_provider": "Unknown provider"
        }
    }
}